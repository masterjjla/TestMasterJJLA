{"version":3,"file":"targetUtil.js","sourceRoot":"","sources":["../../src/targets/targetUtil.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;oEA0BO,AAAK,WAA0B,AAAc,QAAE,AAAU;AAC9D,cAAM,AAAO,UAAG,AAAI,MAAC,AAAI,KAAC,AAAM,OAAC,AAAM,AAAE,aAAK,AAAM,OAAC,AAAI,aAAS,AAAI,2CAAC,AAAI,AAAC,KAAE,AAAC;AAC/E,cAAM,AAAQ,8CAAC,AAAO,AAAC;AACvB,AAAM,eAAC,IAAI,AAAQ,SAAC,AAAO,AAAC,AAC9B;AAAC;;;;;;;;;;;AA9BD,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAE,AAAM,AAAY;;;;AAC7C,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAE5B,AAAO,AAAE,AAAI,AAAE,AAAK,AAAE,AAAM,AAAc,AAC1C,AAAO,AAAe,AAAM,AAAc,AAE1C,AAAM;;;;;;;;;AACJ,gBAAqB,AAAe;AAAf,aAAO,UAAP,AAAO,AAAQ,AACpC;AAAC;AAED,AAAW;AACT,AAAM,eAAC,AAAQ,8CAAC,AAAI,KAAC,AAAO,AAAC,AAC/B;AAAC;AAED,AAAW,gBAAC,AAAY;AACtB,AAAM,eAAC,AAAI,KAAC,AAAO,UAAG,AAAI,MAAC,AAAG,MAAG,AAAI,AACvC;AAAC;AAED,AAAO;AACL,AAAE,AAAC,YAAC,CAAC,AAAK,4CAAC,AAAO,WAAI,AAAO,QAAC,AAAG,IAAC,AAA2C,gDAAK,AAAM,AAAC,QAAC,AAAC;AACzF,AAAM,mBAAC,AAAM,4CAAC,AAAI,KAAC,AAAO,AAAC,AAC7B;AAAC;AACD,AAAM,eAAC,AAAe,gDAAC,AAAO,AAAE,AAClC;AAAC,AACF,AAED,AAAM","sourcesContent":["import { emptyDir, remove } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { Target } from \"../core\"\nimport { Arch, debug } from \"builder-util\"\nimport BluebirdPromise from \"bluebird-lst\"\n\nexport class StageDir {\n  constructor(readonly tempDir: string) {\n  }\n\n  ensureEmpty() {\n    return emptyDir(this.tempDir)\n  }\n\n  getTempFile(name: string) {\n    return this.tempDir + path.sep + name\n  }\n\n  cleanup() {\n    if (!debug.enabled || process.env.ELECTRON_BUILDER_REMOVE_STAGE_EVEN_IF_DEBUG === \"true\") {\n      return remove(this.tempDir)\n    }\n    return BluebirdPromise.resolve()\n  }\n}\n\nexport async function createHelperDir(target: Target, arch: Arch): Promise<StageDir> {\n  const tempDir = path.join(target.outDir, `__${target.name}-temp-${Arch[arch]}`)\n  await emptyDir(tempDir)\n  return new StageDir(tempDir)\n}"]}
